# AlertManager Configuration for NoctisPro PACS
global:
  resolve_timeout: 5m
  smtp_from: 'alertmanager@noctispro.local'
  smtp_smarthost: 'smtp.gmail.com:587'
  smtp_auth_username: ''
  smtp_auth_password: ''
  smtp_require_tls: true

# The directory from which notification templates are read.
templates:
  - '/etc/alertmanager/template/*.tmpl'

# The root route on which each incoming alert enters.
route:
  # The labels by which incoming alerts are grouped together
  group_by: ['alertname', 'cluster', 'service']
  
  # When a new group of alerts is created by an incoming alert, wait at
  # least 'group_wait' to send the initial notification.
  group_wait: 10s
  
  # When the first notification was sent, wait 'group_interval' to send a batch
  # of new alerts that started firing for that group.
  group_interval: 10s
  
  # If an alert has successfully been sent, wait 'repeat_interval' to
  # resend them.
  repeat_interval: 12h
  
  # A default receiver
  receiver: 'team-email'
  
  # All the above attributes are inherited by all child routes and can
  # overwritten on each.
  routes:
    - match:
        severity: critical
      receiver: team-pager
      continue: true
    
    - match:
        severity: warning
      receiver: team-email

# Inhibition rules allow to mute a set of alerts given that another alert is
# firing.
inhibit_rules:
  - source_match:
      severity: 'critical'
    target_match:
      severity: 'warning'
    equal: ['alertname', 'cluster', 'service']

receivers:
  - name: 'team-email'
    email_configs:
      - to: 'team@example.com'
        headers:
          Subject: '[NoctisPro Alert] {{ .GroupLabels.alertname }}'
  
  - name: 'team-pager'
    email_configs:
      - to: 'oncall@example.com'
        headers:
          Subject: '[CRITICAL] NoctisPro Alert'
    # Add other notification methods here
    # webhook_configs:
    #   - url: 'http://your-webhook-url'
    # slack_configs:
    #   - api_url: 'YOUR_SLACK_WEBHOOK_URL'
    #     channel: '#alerts'
